# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-04-24 20:07
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FN011',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prj_date0', models.DateField(help_text='Start Date')),
                ('prj_date1', models.DateField(help_text='End Date')),
                ('prj_cd', models.CharField(help_text='Project Code', max_length=12, unique=True)),
                ('year', models.CharField(blank=True, editable=False, help_text='Year', max_length=4)),
                ('prj_nm', models.CharField(help_text='Project Name', max_length=60)),
                ('prj_ldr', models.CharField(help_text='Project Lead', max_length=40)),
                ('comment0', models.TextField(blank=True, help_text='General Project Description.', null=True)),
                ('slug', models.SlugField(blank=True, editable=False, unique=True)),
                ('aru', models.TextField(blank=True, null=True)),
                ('fof_loc', models.TextField(blank=True, null=True)),
                ('fof_nm', models.TextField(blank=True, null=True)),
                ('wby', models.TextField(blank=True, null=True)),
                ('wby_nm', models.TextField(blank=True, null=True)),
                ('prj_his', models.TextField(blank=True, null=True)),
                ('prj_size', models.TextField(blank=True, null=True)),
                ('prj_ver', models.TextField(blank=True, null=True)),
                ('v0', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Creel List',
                'ordering': ['-prj_date1'],
            },
        ),
        migrations.CreateModel(
            name='FN022',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ssn', models.CharField(help_text='Season Code', max_length=2)),
                ('ssn_des', models.CharField(help_text='Season Description', max_length=60)),
                ('ssn_date0', models.DateField(help_text='Season Start Date')),
                ('ssn_date1', models.DateField(help_text='Season End Date')),
                ('v0', models.CharField(max_length=4)),
                ('creel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seasons', to='creel_portal.FN011')),
            ],
            options={
                'verbose_name': 'Seasons',
                'ordering': ['ssn'],
            },
        ),
        migrations.CreateModel(
            name='FN023',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dtp', models.CharField(help_text='Day Type Code', max_length=2)),
                ('dtp_nm', models.CharField(help_text='Day Type Name', max_length=10)),
                ('dow_lst', models.CharField(help_text='Day Of Week List', max_length=7)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daytypes', to='creel_portal.FN022')),
            ],
            options={
                'verbose_name': 'Day Types',
                'ordering': ['dtp'],
            },
        ),
        migrations.CreateModel(
            name='FN024',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prd', models.CharField(help_text='Day Type Code', max_length=2)),
                ('prdtm0', models.TimeField(help_text='Period Start Time')),
                ('prdtm1', models.TimeField(help_text='Period End Time')),
                ('daytype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='periods', to='creel_portal.FN023')),
            ],
            options={
                'verbose_name': 'Periods',
                'ordering': ['prd'],
            },
        ),
        migrations.CreateModel(
            name='FN025',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Exception Date')),
                ('dtp1', models.CharField(help_text='Day Type Code', max_length=2)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exception_dates', to='creel_portal.FN022')),
            ],
            options={
                'verbose_name': 'Exception Dates',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='FN026',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('space', models.CharField(help_text='Space Code', max_length=2)),
                ('space_des', models.CharField(help_text='Space Description', max_length=100)),
                ('space_siz', models.IntegerField(blank=True, null=True)),
                ('area_cnt', models.IntegerField(blank=True, null=True)),
                ('area_lst', models.CharField(blank=True, help_text='Area List', max_length=2, null=True)),
                ('area_wt', models.FloatField(blank=True, null=True)),
                ('label', models.CharField(help_text='Space Label', max_length=110)),
                ('ddlat', models.FloatField(blank=True, null=True)),
                ('ddlon', models.FloatField(blank=True, null=True)),
                ('creel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='spatial_strata', to='creel_portal.FN011')),
            ],
            options={
                'verbose_name': 'Spatial Strata',
                'ordering': ['space'],
            },
        ),
        migrations.CreateModel(
            name='FN028',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(help_text='Mode Code', max_length=2)),
                ('mode_des', models.CharField(help_text='Fishing Mode Description', max_length=100)),
                ('atyunit', models.IntegerField(help_text='Activity Unit')),
                ('itvunit', models.IntegerField(help_text='Interview Unit')),
                ('chkflag', models.IntegerField(help_text='Check Flag')),
                ('creel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modes', to='creel_portal.FN011')),
            ],
            options={
                'verbose_name': 'Fishing Mode',
                'ordering': ['mode'],
            },
        ),
        migrations.CreateModel(
            name='FN111',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sama', models.CharField(max_length=6)),
                ('date', models.DateField()),
                ('samtm0', models.TimeField(help_text='Interview Period Start')),
                ('weather', models.CharField(max_length=200)),
                ('comment1', models.CharField(blank=True, help_text='Comments about current interview period.', max_length=200, null=True)),
            ],
            options={
                'verbose_name': 'Inveriew Log',
                'ordering': ['stratum__creel__prj_cd', 'sama'],
            },
        ),
        migrations.CreateModel(
            name='FN112',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('atytm0', models.TimeField(help_text='Period Start')),
                ('atytm1', models.TimeField(help_text='Period End')),
                ('atycnt', models.IntegerField(default=0, help_text='Activity Count')),
                ('chkcnt', models.IntegerField(blank=True, default=0, help_text='Check Count', null=True)),
                ('itvcnt', models.IntegerField(default=0, help_text='Interview Count')),
                ('sama', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_counts', to='creel_portal.FN111')),
            ],
            options={
                'verbose_name': 'Activity Count',
                'ordering': ['sama', 'atytm0', 'atytm1'],
            },
        ),
        migrations.CreateModel(
            name='FN121',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sam', models.CharField(max_length=6)),
                ('itvseq', models.IntegerField()),
                ('itvtm0', models.TimeField(help_text='Interview Time')),
                ('date', models.DateField()),
                ('efftm0', models.TimeField(help_text='Fishing Start Time')),
                ('efftm1', models.TimeField(blank=True, help_text='Fishing End Time', null=True)),
                ('effcmp', models.BooleanField(default=False)),
                ('effdur', models.FloatField(blank=True, null=True)),
                ('persons', models.IntegerField(blank=True, null=True)),
                ('anglers', models.IntegerField(blank=True, null=True)),
                ('rods', models.IntegerField(blank=True, null=True)),
                ('angmeth', models.IntegerField(blank=True, null=True)),
                ('angvis', models.IntegerField(blank=True, null=True)),
                ('angorig', models.IntegerField(blank=True, null=True)),
                ('angop1', models.IntegerField(blank=True, null=True)),
                ('angop2', models.IntegerField(blank=True, null=True)),
                ('angop3', models.IntegerField(blank=True, null=True)),
                ('comment1', models.TextField(null=True)),
                ('sama', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interviews', to='creel_portal.FN111')),
            ],
            options={
                'verbose_name': 'Inveriew',
                'ordering': ['strata__creel__prj_cd', 'sam'],
            },
        ),
        migrations.CreateModel(
            name='FN123',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sek', models.BooleanField(default=True)),
                ('hvscnt', models.IntegerField(default=0)),
                ('rlscnt', models.IntegerField(default=0)),
                ('mescnt', models.IntegerField(default=0)),
                ('meswt', models.FloatField(blank=True, null=True)),
                ('interview', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='catch_counts', to='creel_portal.FN121')),
            ],
            options={
                'verbose_name': 'Catch',
                'ordering': ['interview', 'species'],
            },
        ),
        migrations.CreateModel(
            name='FN125',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grp', models.CharField(max_length=2)),
                ('fish', models.IntegerField()),
                ('flen', models.IntegerField(blank=True, null=True)),
                ('tlen', models.IntegerField(blank=True, null=True)),
                ('rwt', models.IntegerField(blank=True, null=True)),
                ('sex', models.IntegerField(blank=True, choices=[(1, 'Male'), (2, 'Female'), (9, 'Unknown')], default=None, null=True)),
                ('gon', models.CharField(blank=True, max_length=2, null=True)),
                ('mat', models.IntegerField(blank=True, choices=[(1, 'Immature'), (2, 'Mature'), (9, 'Unknown')], default=None, null=True)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('agest', models.CharField(blank=True, max_length=8, null=True)),
                ('clipc', models.CharField(blank=True, max_length=6, null=True)),
                ('fate', models.CharField(blank=True, max_length=2, null=True)),
                ('catch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bio_samples', to='creel_portal.FN123')),
            ],
            options={
                'verbose_name': 'Fish',
                'ordering': ['catch', 'fish'],
            },
        ),
        migrations.CreateModel(
            name='FN127',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ageid', models.IntegerField()),
                ('agea', models.IntegerField(blank=True, null=True)),
                ('agemt', models.CharField(max_length=6)),
                ('conf', models.IntegerField(blank=True, null=True)),
                ('edge', models.CharField(blank=True, max_length=2, null=True)),
                ('nca', models.IntegerField(blank=True, null=True)),
                ('fish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='age_estimates', to='creel_portal.FN125')),
            ],
            options={
                'verbose_name': 'AgeEstimate',
                'ordering': ['fish', 'ageid'],
            },
        ),
        migrations.CreateModel(
            name='FR711',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run', models.CharField(max_length=2)),
                ('atycrit', models.IntegerField()),
                ('cifopt', models.CharField(max_length=5)),
                ('contmeth', models.CharField(choices=[('A2', 'Access; Same days'), ('R0', 'Roving; No interviews'), ('R1', 'Roving; Not same days'), ('R2', 'Roving; Same days')], default='A2', max_length=2)),
                ('do_cif', models.IntegerField()),
                ('fr71_est', models.IntegerField()),
                ('fr71_unit', models.IntegerField()),
                ('mask_c', models.CharField(max_length=11)),
                ('save_daily', models.BooleanField()),
                ('strat_comb', models.CharField(max_length=11)),
                ('creel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creesys_settings', to='creel_portal.FN011')),
            ],
            options={
                'verbose_name': 'EffortEstimate',
                'ordering': ['creel', 'run'],
            },
        ),
        migrations.CreateModel(
            name='FR713',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run', models.CharField(db_index=True, max_length=2)),
                ('rec_tp', models.IntegerField(default=1)),
                ('date', models.DateField(blank=True, null=True)),
                ('chkcnt_s', models.IntegerField(blank=True, null=True)),
                ('itvcnt_s', models.IntegerField(blank=True, null=True)),
                ('person_s', models.IntegerField()),
                ('cif_nn', models.IntegerField()),
                ('effre', models.FloatField(blank=True, null=True)),
                ('effre_se', models.FloatField()),
                ('effre_vr', models.FloatField(blank=True, null=True)),
                ('effae', models.FloatField(blank=True, null=True)),
                ('effae_se', models.FloatField()),
                ('effae_vr', models.FloatField(blank=True, null=True)),
                ('effpe', models.FloatField(blank=True, null=True)),
                ('effpe_se', models.FloatField(blank=True, null=True)),
                ('effpe_vr', models.FloatField(blank=True, null=True)),
                ('effro_s', models.FloatField()),
                ('effro_ss', models.FloatField(blank=True, null=True)),
                ('effpo_s', models.FloatField(blank=True, null=True)),
                ('effpo_ss', models.FloatField(blank=True, null=True)),
                ('effao_s', models.FloatField()),
                ('effao_ss', models.IntegerField(blank=True, null=True)),
                ('tripno', models.IntegerField(blank=True, null=True)),
                ('tripne', models.FloatField()),
                ('tripne_se', models.FloatField(blank=True, null=True)),
                ('tripne_vr', models.FloatField(blank=True, null=True)),
                ('aty_nn', models.IntegerField()),
                ('aty_hrs', models.FloatField(blank=True, null=True)),
                ('atycnt_s', models.IntegerField(blank=True, null=True)),
                ('aty_days', models.IntegerField(blank=True, null=True)),
                ('aty0', models.FloatField(blank=True, null=True)),
                ('aty1', models.FloatField()),
                ('aty1_se', models.FloatField()),
                ('aty1_vr', models.FloatField(blank=True, null=True)),
                ('aty2', models.FloatField()),
                ('aty2_se', models.FloatField()),
                ('aty2_vr', models.FloatField(blank=True, null=True)),
                ('angler_mn', models.FloatField(blank=True, null=True)),
                ('angler_s', models.IntegerField()),
                ('angler_ss', models.IntegerField(blank=True, null=True)),
                ('rod_mna', models.FloatField(blank=True, null=True)),
                ('rod_s', models.IntegerField()),
                ('rod_ss', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'EffortEstimate',
                'ordering': ['stratum__creel__prj_cd', 'run', 'stratum__stratum', 'date', 'rec_tp'],
            },
        ),
        migrations.CreateModel(
            name='FR714',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('run', models.CharField(db_index=True, max_length=2)),
                ('rec_tp', models.IntegerField()),
                ('date', models.DateField(null=True)),
                ('sek', models.BooleanField()),
                ('cif1_nn', models.IntegerField()),
                ('angler1_s', models.IntegerField()),
                ('rod1_s', models.IntegerField()),
                ('mescnt_s', models.IntegerField(blank=True, null=True)),
                ('meswt_s', models.FloatField(blank=True, null=True)),
                ('catne1', models.FloatField()),
                ('catne1_pc', models.FloatField(blank=True, null=True)),
                ('catne1_se', models.FloatField()),
                ('catne1_vr', models.FloatField(blank=True, null=True)),
                ('catne', models.FloatField()),
                ('catne_se', models.FloatField()),
                ('catne_vr', models.FloatField(blank=True, null=True)),
                ('catno1_s', models.IntegerField()),
                ('catno1_ss', models.IntegerField(blank=True, null=True)),
                ('catno_s', models.IntegerField()),
                ('catno_ss', models.IntegerField(blank=True, null=True)),
                ('effae1', models.FloatField()),
                ('effae1_pc', models.FloatField(blank=True, null=True)),
                ('effae1_se', models.FloatField()),
                ('effae1_vr', models.FloatField(blank=True, null=True)),
                ('effao1_s', models.FloatField()),
                ('effao1_ss', models.FloatField(blank=True, null=True)),
                ('effpe1', models.FloatField()),
                ('effpe1_se', models.FloatField(blank=True, null=True)),
                ('effpe1_vr', models.FloatField(blank=True, null=True)),
                ('effpo1_s', models.FloatField(blank=True, null=True)),
                ('effpo1_ss', models.FloatField(blank=True, null=True)),
                ('effre1', models.FloatField()),
                ('effre1_se', models.FloatField()),
                ('effre1_vr', models.FloatField(blank=True, null=True)),
                ('effro1_s', models.FloatField()),
                ('effro1_ss', models.FloatField(blank=True, null=True)),
                ('hvscat_pc', models.FloatField()),
                ('hvsne', models.FloatField()),
                ('hvsne_se', models.FloatField()),
                ('hvsne_vr', models.FloatField(blank=True, null=True)),
                ('hvsne1', models.FloatField()),
                ('hvsne1_se', models.FloatField()),
                ('hvsne1_vr', models.FloatField(blank=True, null=True)),
                ('cuenao', models.FloatField()),
                ('cuenao1', models.FloatField(blank=True, null=True)),
                ('cuenae', models.FloatField()),
                ('cuenae1', models.FloatField(blank=True, null=True)),
                ('hvsno_s', models.IntegerField()),
                ('hvsno_ss', models.IntegerField(blank=True, null=True)),
                ('hvsno1_s', models.IntegerField()),
                ('hvsno1_ss', models.IntegerField(blank=True, null=True)),
                ('catea_xy', models.FloatField(blank=True, null=True)),
                ('catea1_xy', models.FloatField(blank=True, null=True)),
                ('hvsea_xy', models.FloatField(blank=True, null=True)),
                ('hvsea1_xy', models.FloatField(blank=True, null=True)),
                ('cater_xy', models.FloatField(blank=True, null=True)),
                ('cater1_xy', models.FloatField(blank=True, null=True)),
                ('hvser_xy', models.FloatField(blank=True, null=True)),
                ('hvser1_xy', models.FloatField(blank=True, null=True)),
                ('catep_xy', models.FloatField(blank=True, null=True)),
                ('catep1_xy', models.FloatField(blank=True, null=True)),
                ('hvsep_xy', models.FloatField(blank=True, null=True)),
                ('hvsep1_xy', models.FloatField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'HarvestEstimate',
                'ordering': ['stratum__creel__prj_cd', 'run', 'stratum', 'species', 'date', 'rec_tp', 'sek'],
            },
        ),
        migrations.CreateModel(
            name='Lake',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('abbrev', models.CharField(max_length=10, unique=True)),
                ('lake_name', models.CharField(max_length=50)),
                ('ddlat', models.FloatField(default=45.0)),
                ('ddlon', models.FloatField(default=-82.0)),
                ('zoom', models.IntegerField(default=7)),
            ],
            options={
                'verbose_name': 'Lake',
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('species_code', models.IntegerField(unique=True)),
                ('common_name', models.CharField(max_length=30)),
                ('scientific_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'ordering': ['species_code'],
            },
        ),
        migrations.CreateModel(
            name='Strata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stratum', models.CharField(max_length=11)),
                ('area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strata', to='creel_portal.FN026')),
                ('creel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strata', to='creel_portal.FN011')),
                ('daytype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strata', to='creel_portal.FN023')),
                ('mode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strata', to='creel_portal.FN028')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='strata', to='creel_portal.FN022')),
            ],
            options={
                'ordering': ['creel__prj_cd', 'stratum'],
            },
        ),
        migrations.AddField(
            model_name='fr714',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='catch_estimates', to='creel_portal.Species'),
        ),
        migrations.AddField(
            model_name='fr714',
            name='stratum',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='catch_estimates', to='creel_portal.Strata'),
        ),
        migrations.AddField(
            model_name='fr713',
            name='stratum',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='effort_estimates', to='creel_portal.Strata'),
        ),
        migrations.AddField(
            model_name='fn123',
            name='species',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='catch_counts', to='creel_portal.Species'),
        ),
        migrations.AddField(
            model_name='fn011',
            name='lake',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='creels', to='creel_portal.Lake'),
        ),
        migrations.AlterUniqueTogether(
            name='fr714',
            unique_together=set([('stratum', 'species', 'date', 'rec_tp', 'sek', 'run')]),
        ),
        migrations.AlterUniqueTogether(
            name='fr713',
            unique_together=set([('stratum', 'date', 'rec_tp', 'run')]),
        ),
        migrations.AlterUniqueTogether(
            name='fr711',
            unique_together=set([('creel', 'run')]),
        ),
        migrations.AlterUniqueTogether(
            name='fn127',
            unique_together=set([('fish', 'ageid')]),
        ),
        migrations.AlterUniqueTogether(
            name='fn125',
            unique_together=set([('catch', 'grp', 'fish')]),
        ),
        migrations.AlterUniqueTogether(
            name='fn123',
            unique_together=set([('interview', 'species')]),
        ),
        migrations.AlterUniqueTogether(
            name='fn112',
            unique_together=set([('sama', 'atytm0', 'atytm1')]),
        ),
        migrations.AlterUniqueTogether(
            name='fn028',
            unique_together=set([('creel', 'mode')]),
        ),
        migrations.AlterUniqueTogether(
            name='fn026',
            unique_together=set([('creel', 'space')]),
        ),
        migrations.AlterUniqueTogether(
            name='fn024',
            unique_together=set([('daytype', 'prd')]),
        ),
        migrations.AlterUniqueTogether(
            name='fn023',
            unique_together=set([('season', 'dtp')]),
        ),
        migrations.AlterUniqueTogether(
            name='fn022',
            unique_together=set([('creel', 'ssn')]),
        ),
    ]
